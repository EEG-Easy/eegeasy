{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"BrianCode-graph","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMLo2KsACFRDTdi3vqLivF0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"bB0UNM04Ndio","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":261},"outputId":"6b3ec989-ac6a-4002-8edb-931f0bb957e4","executionInfo":{"status":"ok","timestamp":1588423262922,"user_tz":-540,"elapsed":9621,"user":{"displayName":"성지현","photoUrl":"","userId":"14958368266460796275"}}},"source":["pip install mne==0.18.2"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting mne==0.18.2\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/42/ec/08afc26ea6204473031f786d0f3034119a5a138d40062b37fbf578c81c01/mne-0.18.2.tar.gz (6.3MB)\n","\u001b[K     |████████████████████████████████| 6.3MB 3.6MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.11.3 in /usr/local/lib/python3.6/dist-packages (from mne==0.18.2) (1.18.3)\n","Requirement already satisfied: scipy>=0.17.1 in /usr/local/lib/python3.6/dist-packages (from mne==0.18.2) (1.4.1)\n","Building wheels for collected packages: mne\n","  Building wheel for mne (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mne: filename=mne-0.18.2-cp36-none-any.whl size=6316003 sha256=a358932d980cdd59dcbf96bfc600ddd02e05e9f9c6bd84e98310380c744f7106\n","  Stored in directory: /root/.cache/pip/wheels/71/40/30/fb9a9bdeac02c6b3b144be66ac345c5b5587a7d7610564535b\n","Successfully built mne\n","Installing collected packages: mne\n","Successfully installed mne-0.18.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"JWcMyTLHZiSC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":131},"outputId":"b0d6ccaa-1384-476c-9c92-ed65275c13a4","executionInfo":{"status":"ok","timestamp":1588423311961,"user_tz":-540,"elapsed":34355,"user":{"displayName":"성지현","photoUrl":"","userId":"14958368266460796275"}}},"source":["from google.colab import drive\n","\n","drive.mount('/content/gdrive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fnb0ju7tZleM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":36},"outputId":"0fd8bf3e-1974-4680-ae43-3cc76119d172","executionInfo":{"status":"ok","timestamp":1588423323834,"user_tz":-540,"elapsed":754,"user":{"displayName":"성지현","photoUrl":"","userId":"14958368266460796275"}}},"source":["cd /content/gdrive/My Drive/eeg2"],"execution_count":3,"outputs":[{"output_type":"stream","text":["/content/gdrive/My Drive/eeg2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZqHkNiU8R1g7","colab_type":"code","colab":{}},"source":["import numpy as np\n","import pandas as pd\n","\n","import mne\n","from mne import EpochsArray\n","from mne.channels import read_montage\n","from mne.epochs import concatenate_epochs\n","from mne import create_info, find_events, Epochs\n","from mne.viz.topomap import _prepare_topo_plot\n","from mne.viz.topomap import plot_topomap\n","from mne.decoding import CSP\n","\n","from sklearn.pipeline import make_pipeline\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import roc_auc_score\n","from sklearn.model_selection import cross_val_score, LeaveOneGroupOut\n","from glob import glob\n","\n","import matplotlib.pyplot as plt\n","from mpl_toolkits.axes_grid1 import make_axes_locatable\n","\n","from scipy.signal import welch\n","from mne import pick_types\n","\n","from subprocess import check_output"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"nl_mW8EQTGMd","colab_type":"code","colab":{}},"source":["# define the channel type, where the first 64 are EEG, next 4 are EOG, then Nose,\n","#and finally right mastoid (EEG)\n","col_names = pd.read_csv('/content/gdrive/My Drive/eeg2/input/columnLabels.csv')\n","ch_names = list(col_names.columns[4:])\n","ch_type = ['eeg']*64 + ['eog']*4 + ['misc'] + ['eeg']"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"R6ND_44MUJD6","colab_type":"code","colab":{}},"source":["# The sampling rate of the recording\n","sfreq = 1024  # in Hertz (samples per second): 1초에 한 번씩 샘플링"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YDy7vEZUH4eO","colab_type":"code","colab":{}},"source":["#파일에서 몽타주 읽기: 사용자 지정 파일에서 전극  위치를 읽는데 사용. 내장 몽타주 중 하나를 로드하는 매개변수 - standard_1005(전극은 국제 10-05 시스템에 따라 이름이 지정되고 배치됩니다.)\n","montage = read_montage('standard_1005',ch_names)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Z8OWEWpxIuQd","colab_type":"code","colab":{}},"source":["# Initialize required fields\n","info = create_info(ch_names, sfreq, ch_type, montage)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Zp3w4DG9I0rQ","colab_type":"code","colab":{}},"source":["def creat_mne_epoch_object(fname, info):\n","  info['description'] = 'dataset from ' + fname       #add information of file name\n","  tmin = -1.5         #Trials were cut from -1.5 to 1.5 seconds\n","  \n","  data = pd.read_csv(fname, header=None)\n","  npdata = np.array(data)   #convert data to numpy array\n","\n","  #sample 1537 is time 0, use that for the event \n","  onsets = np.array(np.where(npdata[:,3]==1537))  #전체 배열의 전체 행의 3번째 열\n","    #onsets의 이벤트가 발생한 행의 2번째 열\n","  conditions = npdata[npdata[:,3]==1537,2]\n","  #use these to make an events array for mne (middle column are zeros):\n","  events = np.squeeze(np.dstack((onsets.flatten(), np.zeros(conditions.shape),conditions)))\n","\n","  #now we just need EEGdata in a 3D shape (n_epochs, n_samples ,n_channels)\n","  EEGdata = npdata.reshape(len(conditions),3072,74)\n","\n","  #remove the first 4 columns (non-eeg, described above):\n","  EEGdata = EEGdata[:,:,4:]\n","  EEGdata = np.swapaxes(EEGdata,1,2)    #swap axes (1,2)\n","\n","  #create labels for the conditions, 1, 2, and 3:\n","  event_id = dict(button_tone=1, playback_tone=2, button_alone=3)\n","\n","  # create raw object \n","  custom_epochs = EpochsArray(EEGdata, info=info, events=events.astype('int'), tmin=tmin, event_id=event_id)\n","  return custom_epochs"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"574lLFflPUma","colab_type":"code","colab":{}},"source":["subject = 1"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"TcM30QwnPiva","colab_type":"code","colab":{}},"source":["auc = []  #enumerate for count iterate number\n","for i,subject in enumerate(subjects):\n","  epochs_tot = []\n","\n","  #check file is existing on folder\n","  fnames = glob(\"../input/%d.csv\" % (subject))\n","\n","  fname = fnames[0] \n","  session = []\n","  y = []\n","\n","  # read data \n","  custom_epochs = creat_mne_epoch_object(fname, info)\n","\n","  # pick eeg signal (mne library)\n","  picks = pick_types(custom_epochs.info,eeg=True)\n","\n","  # Filter data for alpha frequency and beta band\n","  custom_epochs.filter(2,45, picks=picks, method='iir', n_jobs=-1, verbose=False)\n","\n","  #epoch with condition\n","  epochs = custom_epochs['button_tone']\n","  epochs_tot.append(epochs)\n","  session.extend([1]*len(epochs))\n","  y.extend([1]*len(epochs))\n","    \n","  epochs = custom_epochs['playback_tone']\n","  epochs_tot.append(epochs)\n","  session.extend([1]*len(epochs))\n","  y.extend([-1]*len(epochs))\n","        \n","  #concatenate all epochs\n","  epochs = concatenate_epochs(epochs_tot)\n","\n","  #get 1second around the tone onset:\n","  #for debugging: subEpochs = epochs\n","  X = epochs.crop(tmin=-0.7, tmax=0.299).get_data()\n","  #but exclude non 'eeg' channels:\n","  X = X[:,[ch=='eeg' for ch  in ch_type],:]\n","    \n","  y = np.array(y)\n","\n","  # run CSP(특징 추출을위한 공간 필터를 추정하기 위해 감독 분해 (supervised decomposition)로 사용)\n","  csp = CSP(reg='ledoit_wolf')\n","  csp.fit(X,y)\n","\n","  # compute spatial filtered spectrum\n","  po = []\n","  for x in X:\n","    f,p = welch(np.dot(csp.filters_[0,:].T,x), sfreq, nperseg=X.shape[2])\n","    po.append(p)\n","  po = np.array(po)\n","\n","  # prepare topoplot\n","  _,epos,_,_,_ = _prepare_topo_plot(epochs,'eeg',None)\n","\n","\n","  #Drawing plot!!\n","  pattern = csp.patterns_[0,:]\n","  pattern -= pattern.mean()\n","  ix = np.argmax(abs(pattern))\n","\n","  if pattern[ix]>0:\n","    sign = 1.0\n","  else:\n","    sign = -1.0\n","    \n","  fig, ax_topo = plt.subplots(1, 1, figsize=(12, 4))\n","  title = 'Spatial Pattern'\n","  fig.suptitle(title, fontsize=14)\n","  img, _ = plot_topomap(sign*pattern,epos,axes=ax_topo,show=False)\n","  divider = make_axes_locatable(ax_topo)\n","    # add axes for colorbar\n","  ax_colorbar = divider.append_axes('right', size='5%', pad=0.05)\n","  plt.colorbar(img, cax=ax_colorbar)\n","    \n","    # plot spectrum\n","  fix = (f>7) & (f<35)\n","  ax_spectrum = divider.append_axes('right', size='300%', pad=1.2)\n","  ax_spectrum.plot(f[fix],np.log(po[y==1][:,fix].mean(axis=0).T),'-r',lw=2)\n","  ax_spectrum.plot(f[fix],np.log(po[y==-1][:,fix].mean(axis=0).T),'-b',lw=2)\n","  ax_spectrum.set_xlabel('Frequency (Hz)')\n","  ax_spectrum.set_ylabel('Power (dB)')\n","  plt.grid()\n","  plt.legend(['button tone','playback'])\n","  plt.title('Subject %d' % subject)\n","\n","  plt.savefig('spatial_pattern_subject_%02d.png' % subject ,bbox_inches='tight')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7TP_ZuSqcr00","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":685},"outputId":"b8b60923-fcf7-44b2-84b4-50513043453a","executionInfo":{"status":"ok","timestamp":1588424468584,"user_tz":-540,"elapsed":31372,"user":{"displayName":"성지현","photoUrl":"","userId":"14958368266460796275"}}},"source":["  auc = []  #enumerate for count iterate number\n","  epochs_tot = []\n","\n","  #check file is existing on folder\n","  fnames = glob(\"/content/gdrive/My Drive/eeg2/input/%d.csv\" % (subject))\n","\n","  fname = fnames[0] \n","  session = []\n","  y = []\n","\n","  # read data \n","  custom_epochs = creat_mne_epoch_object(fname, info)\n","\n","  # pick eeg signal (mne library)\n","  picks = pick_types(custom_epochs.info,eeg=True)\n","\n","  # Filter data for alpha frequency and beta band\n","  custom_epochs.filter(2,45, picks=picks, method='iir', n_jobs=-1, verbose=False)\n","\n","  #epoch with condition\n","  epochs = custom_epochs['button_tone']\n","  epochs_tot.append(epochs)\n","  session.extend([1]*len(epochs))\n","  y.extend([1]*len(epochs))\n","    \n","  epochs = custom_epochs['playback_tone']\n","  epochs_tot.append(epochs)\n","  session.extend([1]*len(epochs))\n","  y.extend([-1]*len(epochs))\n","        \n","  #concatenate all epochs\n","  epochs = concatenate_epochs(epochs_tot)\n","\n","  #get 1second around the tone onset:\n","  #for debugging: subEpochs = epochs\n","  X = epochs.crop(tmin=-0.7, tmax=0.299).get_data()\n","  #but exclude non 'eeg' channels:\n","  X = X[:,[ch=='eeg' for ch  in ch_type],:]\n","    \n","  y = np.array(y)\n","\n","  # run CSP(특징 추출을위한 공간 필터를 추정하기 위해 감독 분해 (supervised decomposition)로 사용)\n","  csp = CSP(reg='ledoit_wolf')\n","  csp.fit(X,y)\n","\n","  # compute spatial filtered spectrum\n","  po = []\n","  for x in X:\n","    f,p = welch(np.dot(csp.filters_[0,:].T,x), sfreq, nperseg=X.shape[2])\n","    po.append(p)\n","  po = np.array(po)\n","\n","  # prepare topoplot\n","  _,epos,_,_,_ = _prepare_topo_plot(epochs,'eeg',None)\n","\n","\n","  #Drawing plot!!\n","  pattern = csp.patterns_[0,:]\n","  pattern -= pattern.mean()\n","  ix = np.argmax(abs(pattern))\n","\n","  if pattern[ix]>0:\n","    sign = 1.0\n","  else:\n","    sign = -1.0\n","    \n","  fig, ax_topo = plt.subplots(1, 1, figsize=(12, 4))\n","  title = 'Spatial Pattern'\n","  fig.suptitle(title, fontsize=14)\n","  img, _ = plot_topomap(sign*pattern,epos,axes=ax_topo,show=False)\n","  divider = make_axes_locatable(ax_topo)\n","    # add axes for colorbar\n","  ax_colorbar = divider.append_axes('right', size='5%', pad=0.05)\n","  plt.colorbar(img, cax=ax_colorbar)\n","    \n","    # plot spectrum\n","  fix = (f>7) & (f<35)\n","  ax_spectrum = divider.append_axes('right', size='300%', pad=1.2)\n","  ax_spectrum.plot(f[fix],np.log(po[y==1][:,fix].mean(axis=0).T),'-r',lw=2)\n","  ax_spectrum.plot(f[fix],np.log(po[y==-1][:,fix].mean(axis=0).T),'-b',lw=2)\n","  ax_spectrum.set_xlabel('Frequency (Hz)')\n","  ax_spectrum.set_ylabel('Power (dB)')\n","  plt.grid()\n","  plt.legend(['button tone','playback'])\n","  plt.title('Subject %d' % subject)\n","\n","  plt.savefig('spatial_pattern_subject_%02d.png' % subject ,bbox_inches='tight')"],"execution_count":14,"outputs":[{"output_type":"stream","text":["289 matching events found\n","No baseline correction applied\n","Not setting metadata\n","0 projection items activated\n","0 bad epochs dropped\n","194 matching events found\n","No baseline correction applied\n","Not setting metadata\n","0 bad epochs dropped\n","Computing data rank from raw with rank=None\n","    Using tolerance 2.2e+02 (2.2e-16 eps * 65 dim * 1.5e+16  max singular value)\n","    Estimated rank (mag): 65\n","    MAG: rank 65 computed from 65 data channels with 0 projectors\n","Reducing data rank from 65 -> 65\n","Estimating covariance using LEDOIT_WOLF\n","Done.\n","Computing data rank from raw with rank=None\n","    Using tolerance 2.1e+02 (2.2e-16 eps * 65 dim * 1.4e+16  max singular value)\n","    Estimated rank (mag): 65\n","    MAG: rank 65 computed from 65 data channels with 0 projectors\n","Reducing data rank from 65 -> 65\n","Estimating covariance using LEDOIT_WOLF\n","Done.\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 864x288 with 3 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}